{"ast":null,"code":"var _jsxFileName = \"D:\\\\vehicle-breakdown-assistance\\\\vehicle-frontend\\\\src\\\\components\\\\ProviderDashboard.js\",\n  _s = $RefreshSig$();\n// ProviderDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderDashboard = () => {\n  _s();\n  const [pendingRequests, setPendingRequests] = useState([]);\n  useEffect(() => {\n    const fetchPendingRequests = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/help-requests/pending');\n        const data = await response.json();\n        if (data.success) {\n          setPendingRequests(data.helpRequests);\n        } else {\n          console.error('Failed to fetch pending requests');\n        }\n      } catch (error) {\n        console.error('Error fetching pending requests:', error);\n      }\n    };\n    fetchPendingRequests();\n  }, []);\n  const acceptRequest = async requestId => {\n    const providerId = localStorage.getItem('userId'); // Retrieve provider ID from localStorage\n    if (!providerId) {\n      alert('Provider not logged in.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/accept-help/${requestId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          providerId\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Request accepted!');\n        setPendingRequests(prev => prev.filter(req => req.id !== requestId));\n      } else {\n        alert('Failed to accept request');\n      }\n    } catch (error) {\n      console.error('Error accepting help request:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Help Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), pendingRequests.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request ID: \", request.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptRequest(request.id),\n          children: \"Accept Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, request.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending requests found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ProviderDashboard, \"zoqiTjMh00JnYTB7ePQaHBXNh8Q=\");\n_c = ProviderDashboard;\nexport default ProviderDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProviderDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProviderDashboard","_s","pendingRequests","setPendingRequests","fetchPendingRequests","response","fetch","data","json","success","helpRequests","console","error","acceptRequest","requestId","providerId","localStorage","getItem","alert","method","headers","body","JSON","stringify","prev","filter","req","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","request","onClick","_c","$RefreshReg$"],"sources":["D:/vehicle-breakdown-assistance/vehicle-frontend/src/components/ProviderDashboard.js"],"sourcesContent":["// ProviderDashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst ProviderDashboard = () => {\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPendingRequests = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/help-requests/pending');\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setPendingRequests(data.helpRequests);\r\n        } else {\r\n          console.error('Failed to fetch pending requests');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching pending requests:', error);\r\n      }\r\n    };\r\n\r\n    fetchPendingRequests();\r\n  }, []);\r\n\r\n  const acceptRequest = async (requestId) => {\r\n    const providerId = localStorage.getItem('userId'); // Retrieve provider ID from localStorage\r\n    if (!providerId) {\r\n      alert('Provider not logged in.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/accept-help/${requestId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ providerId }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert('Request accepted!');\r\n        setPendingRequests((prev) => prev.filter((req) => req.id !== requestId));\r\n      } else {\r\n        alert('Failed to accept request');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accepting help request:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Pending Help Requests</h3>\r\n      {pendingRequests.length > 0 ? (\r\n        <ul>\r\n          {pendingRequests.map((request) => (\r\n            <li key={request.id}>\r\n              <p>Request ID: {request.id}</p>\r\n              <button onClick={() => acceptRequest(request.id)}>Accept Help</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No pending requests found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}