{"ast":null,"code":"var _jsxFileName = \"D:\\\\vehicle-breakdown-assistance\\\\vehicle-frontend\\\\src\\\\components\\\\ProviderDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderDashboard = () => {\n  _s();\n  const [pendingRequests, setPendingRequests] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/help-requests/pending') // New endpoint to fetch pending requests\n    .then(response => response.json()).then(data => {\n      if (data.success) {\n        setPendingRequests(data.helpRequests);\n      }\n    }).catch(error => console.error('Error fetching pending requests:', error));\n  }, []);\n  const acceptRequest = requestId => {\n    const providerId = 1; // Assume the provider is logged in with ID 1\n    fetch(`http://localhost:5000/api/accept-help/${requestId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        providerId\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        alert('Request accepted!');\n        setPendingRequests(prev => prev.filter(req => req.id !== requestId)); // Remove accepted request\n      }\n    }).catch(error => console.error('Error accepting help:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Help Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), pendingRequests.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Request ID: \", request.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => acceptRequest(request.id),\n          children: \"Accept Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, request.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No pending requests found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProviderDashboard, \"zoqiTjMh00JnYTB7ePQaHBXNh8Q=\");\n_c = ProviderDashboard;\nexport default ProviderDashboard;\nvar _c;\n$RefreshReg$(_c, \"ProviderDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProviderDashboard","_s","pendingRequests","setPendingRequests","fetch","then","response","json","data","success","helpRequests","catch","error","console","acceptRequest","requestId","providerId","method","headers","body","JSON","stringify","alert","prev","filter","req","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","request","onClick","_c","$RefreshReg$"],"sources":["D:/vehicle-breakdown-assistance/vehicle-frontend/src/components/ProviderDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ProviderDashboard = () => {\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/help-requests/pending')  // New endpoint to fetch pending requests\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          setPendingRequests(data.helpRequests);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error fetching pending requests:', error));\r\n  }, []);\r\n\r\n  const acceptRequest = (requestId) => {\r\n    const providerId = 1; // Assume the provider is logged in with ID 1\r\n    fetch(`http://localhost:5000/api/accept-help/${requestId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ providerId }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.success) {\r\n          alert('Request accepted!');\r\n          setPendingRequests(prev => prev.filter(req => req.id !== requestId));  // Remove accepted request\r\n        }\r\n      })\r\n      .catch(error => console.error('Error accepting help:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Pending Help Requests</h3>\r\n      {pendingRequests.length > 0 ? (\r\n        <ul>\r\n          {pendingRequests.map(request => (\r\n            <li key={request.id}>\r\n              <p>Request ID: {request.id}</p>\r\n              <button onClick={() => acceptRequest(request.id)}>Accept Help</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No pending requests found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}